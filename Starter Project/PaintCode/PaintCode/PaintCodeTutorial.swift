//
//  PaintCodeTutorial.swift
//  ProjectName
//
//  Created by jmt on 16/9/22.
//  Copyright (c) 2016 guaji. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class PaintCodeTutorial : NSObject {

    //// Drawing Methods

    public class func drawStopWatch() {
        //// Color Declarations
        let myBlueColor = UIColor(red: 0.067, green: 0.553, blue: 0.855, alpha: 1.000)

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRectMake(15, 30, 220, 220))
        myBlueColor.setFill()
        ovalPath.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(114, 2, 22, 34))
        myBlueColor.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(203, 30))
        bezierPath.addLineToPoint(CGPointMake(224.21, 51.21))
        bezierPath.addLineToPoint(CGPointMake(210.07, 65.36))
        bezierPath.addCurveToPoint(CGPointMake(202.72, 58), controlPoint1: CGPointMake(210.07, 65.36), controlPoint2: CGPointMake(206.74, 62.02))
        bezierPath.addLineToPoint(CGPointMake(196, 58))
        bezierPath.addCurveToPoint(CGPointMake(196, 51.28), controlPoint1: CGPointMake(196, 58), controlPoint2: CGPointMake(196, 54.81))
        bezierPath.addCurveToPoint(CGPointMake(188.86, 44.14), controlPoint1: CGPointMake(192.07, 47.36), controlPoint2: CGPointMake(188.86, 44.14))
        bezierPath.addLineToPoint(CGPointMake(203, 30))
        bezierPath.closePath()
        myBlueColor.setFill()
        bezierPath.fill()
    }

    public class func drawStopWatchHand() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier 2 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 125, 110)

        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(4, -91))
        bezier2Path.addCurveToPoint(CGPointMake(4, -14.46), controlPoint1: CGPointMake(4, -91), controlPoint2: CGPointMake(4, -47.89))
        bezier2Path.addCurveToPoint(CGPointMake(15, 0), controlPoint1: CGPointMake(10.34, -12.71), controlPoint2: CGPointMake(15, -6.9))
        bezier2Path.addCurveToPoint(CGPointMake(4, 14.46), controlPoint1: CGPointMake(15, 6.9), controlPoint2: CGPointMake(10.34, 12.71))
        bezier2Path.addCurveToPoint(CGPointMake(4, 24), controlPoint1: CGPointMake(4, 20.39), controlPoint2: CGPointMake(4, 24))
        bezier2Path.addLineToPoint(CGPointMake(-4, 24))
        bezier2Path.addCurveToPoint(CGPointMake(-4, 14.46), controlPoint1: CGPointMake(-4, 24), controlPoint2: CGPointMake(-4, 20.39))
        bezier2Path.addCurveToPoint(CGPointMake(-15, 0), controlPoint1: CGPointMake(-10.34, 12.71), controlPoint2: CGPointMake(-15, 6.9))
        bezier2Path.addCurveToPoint(CGPointMake(-4, -14.46), controlPoint1: CGPointMake(-15, -6.9), controlPoint2: CGPointMake(-10.34, -12.71))
        bezier2Path.addCurveToPoint(CGPointMake(-4, -91), controlPoint1: CGPointMake(-4, -47.89), controlPoint2: CGPointMake(-4, -91))
        bezier2Path.addLineToPoint(CGPointMake(4, -91))
        bezier2Path.addLineToPoint(CGPointMake(4, -91))
        bezier2Path.closePath()
        UIColor.whiteColor().setFill()
        bezier2Path.fill()

        CGContextRestoreGState(context)
    }

}
